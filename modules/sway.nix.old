{ outputs
, pkgs
, ...
}:
let
  dbus-sway-environment = pkgs.writeTextFile {
    name = "dbus-sway-environment";
    destination = "/bin/dbus-sway-environment";
    executable = true;

    text = ''
      dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
      systemctl --user stop pipewire pipewire.socket wireplumber xdg-desktop-portal xdg-desktop-portal-wlr
      systemctl --user start pipewire pipewire.socket wireplumber xdg-desktop-portal xdg-desktop-portal-wlr
    '';
  };

in
{
  services.dbus.enable = true;

  services.displayManager.defaultSession = "sway";

  sessionVariables = rec {
    XDG_CONFIG_HOME = "$HOME/.config";
    XDG_DATA_HOME = "$HOME/.local/share";
    XDG_STATE_HOME = "$HOME/.local/state";
    XDG_CACHE_HOME = "$HOME/.cache";

    XDG_BIN_HOME = "$HOME/.local/bin";
    PATH = [
      "${XDG_BIN_HOME}"
    ];
  };

  nixpkgs.overlays = [ outputs.overlays.unstable-packages ];

  # enable sway window manager
  wayland.windowManager.sway = {
    enable = true;
    config = rec {
      modifier = "Mod4";
      # Use kitty as default terminal
      terminal = "kitty"; 
      startup = [
        # Launch Firefox on start
        {command = "firefox";}
      ];
    };
  };
 # programs.sway = {
 #   enable = true;
 #   wrapperFeatures.gtk = true;
 #   extraPackages = with pkgs; [
 #     unstable.corrupter
 #     waybar
 #     mpg123
 #     swaylock
 #     swayidle
 #     wl-clipboard
 #     wf-recorder
 #     grim
 #     mako
 #     slurp
 #     alacritty
 #     rofi-wayland
 #     wofi
 #     bemenu
 #     termite
 #     direnv
 #     eza
 #     du-dust
 #     file
 #     tree
 #     htop
 #     pulseaudio
 #     dbus-sway-environment
 #     jq
 #   ];
 #   extraSessionCommands = ''
 #     export SDL_VIDEODRIVER=wayland
 #     export QT_QPA_PLATFORM=wayland
 #     export QT_WAYLAND_DISABLE_WINDOWDECORATION=1
 #     export JAVA_AWT_WM_NONREPARENTING=1
 #     export MOZ_ENABLE_WAYLAND=1
 #   '';
 # };
}
