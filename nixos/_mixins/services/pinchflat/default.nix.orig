# Auto-generated using compose2nix v0.3.2-pre.
{ config, pkgs, lib, ... }:

{
	users.users."mealie" = {
		name = "mealie";
		isSystemUser = true;
		group = "mealie";	
		extraGroups = [ config.users.groups.keys.name ];
	};

	users.groups.mealie = {
	};


	sops.secrets.mealie = {
		sopsFile = ./mealie.enc.env;
		format = "dotenv";
		owner = config.users.users.mealie.name;
		group = config.users.groups.mealie.name;	
	};

  # Runtime
  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
    defaultNetwork.settings = {
      # Required for container networking to be able to use names.
      dns_enabled = true;
    };
  };

  # Enable container name DNS for non-default Podman networks.
  # https://github.com/NixOS/nixpkgs/issues/226365
  networking.firewall.interfaces."podman+".allowedUDPPorts = [ 53 ];

  virtualisation.oci-containers.backend = "podman";

  # Containers
  virtualisation.oci-containers.containers."mealie-mealie" = {
    image = "ghcr.io/mealie-recipes/mealie:latest";
    environment = {
      "ALLOW_SIGNUP" = "True";
			"BASE_URL" = "https://recipes.belrose.io";
      "DB_ENGINE" = "sqlite";
      "LOG_LEVEL" = "DEBUG";
      "OIDC_AUTH_ENABLED" = "True";
      "OIDC_AUTO_REDIRECT" = "False";
      "OIDC_CLIENT_ID" = "mealie2";
      "OIDC_CONFIGURATION_URL" = "https://idp.belrose.io/realms/belrose.io/.well-known/openid-configuration";
      "OIDC_SIGNUP_ENABLED" = "True";
      "PUID" = "989";
      "PGID" = "987";
      "SMTP_FROM_EMAIL" = "mealie@derekbelrose.com";
      "SMTP_HOST" = "smtp.sendgrid.net";
      "SMTP_USER" = "apikey";
			"SMTP_PORT" = "465";
    };
		environmentFiles = [
			config.sops.secrets.mealie.path
		];
    volumes = [
      "/store/service-data/mealie:/app/data:rw"
    ];
    ports = [
      "9000:9000/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=mealie"
      "--network=mealie_default"
    ];
  };
  systemd.services."podman-mealie-mealie" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };
    after = [
      "podman-network-mealie_default.service"
    ];
    requires = [
      "podman-network-mealie_default.service"
    ];
    partOf = [
      "podman-compose-mealie-root.target"
    ];
    wantedBy = [
      "podman-compose-mealie-root.target"
    ];
  };

  # Networks
  systemd.services."podman-network-mealie_default" = {
    path = [ pkgs.podman ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "podman network rm -f mealie_default";
    };
    script = ''
      podman network inspect mealie_default || podman network create mealie_default
    '';
    partOf = [ "podman-compose-mealie-root.target" ];
    wantedBy = [ "podman-compose-mealie-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.user.targets."podman-compose-mealie-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
